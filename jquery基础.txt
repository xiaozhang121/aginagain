1.------------------------------------------------------------------------------------

jQuery: j:js Query:查询

li:eq(索引值)-----对应的li标签.
li.eq(索引值)----------对应的 li标签

.trim();清除字符串前后空格
2.------------------------------------------------------------------------------------
siblings();返回被选元素的所有同级元素
find()；返回备选元素的所有后代元素
3.------------------------------------------------------------------------------------
显示：
.show(500,function(){
});
隐藏：
.hide();
可放入两个参数 第一个参数为时间
第二个参数为回调函数 show执行之后触发
4.-------------------------------------------------------------------------------------
jquery3种动画:
.slideDown();
滑出
.slideUp();
滑入
.slideToggle();
切换滑入/滑出

.fadeIn();
淡入
.fadeOut();
淡出
.fadeTaggle();
切换淡入/淡出
.fadeTo(0.9,0.2);
切换透明度,两个参数为开始结束的透明值

时间参数可为(slow--慢600/normal----正常400/fast-----快200)


可放入两个参数 第一个参数为时间
第二个参数为回调函数 show执行之后触发

动画效果
.hide(速度,效果,回调函数);回调函数在动画执行完触发;/效果默认为swing可设置linear;
.show(-,-,-);
.toggle(-,-,-);

自定义动画:
animate();
$(this).animate({ 
//要修改的元素的属性,属性名:属性值;/更改不了颜色;
width : 200,
height : 300 

},1000,'linear',fn);

5.-------------------------------------------------------------------------------------
arguments.callee;调用匿名函数递归(不推荐使用)
6.-------------------------------------------------------------------------------------
获取的元素通过append方法添加到另一个元素中的时候相当于剪切(原元素消失)
$().append();
使用克隆相当于复制 不会消失
$().clone().appendTo($());
7.---------------------------------------------------------------------------------------
**************************************************************************jquery基础用法************************************************************************
选择器:
索引选择器: $("选择器:eq(索引值)");
通配符选择器:$("*"):页面上所有元素;
奇数筛选器:$("选择器:odd");
偶数筛选器:$("选择器:even");
筛选器:$("选择器:lt(索引)")------------->获取小于这个索引的元素
$("选择器:gt(索引)")----------------------->获取大于这个索引的元素
其他选择器:
$("选择器:last")----->最后一个;
$("选择器:first")----->第一个;

获取当前元素的方法:
A.next();----------->下一个兄弟元素
A.nextAll();--------->后面的所有兄弟元素
A.prev();------------->前一个兄弟元素
A.prevAll();----------->全面所有的兄弟元素
A.siblings();----------->所有的兄弟元素(没有自己)
A.parent();------------>父级元素
A.children();----------->当前元素中所有的子元素(直接的子元素)
A.find("选择器");------->从当前元素总找某个或者是某些元素



方法:
.val();------------->操作表单元素value属性,可以获取也可以设置(里面有参数设置;没有参数获取);
.text();------------>操作元素中的文本内容,相当于innerText
.html();------------>操作元素中的html及内容,相当于innerHTML
.css();-------------->操作元素的样式
.addClass();-------->添加类样式
.removeClass();----->移除类样式
.hasClass();---------->判断元素是否应用了类样式
.index();-------------->元素的索引
.empty();------------->移除所有子元素
.remove();------------>移除自己
.attr("checked",true);设置选取
.attr(参数1,参数2)----->设置自定义属性与值;
.prop("checked")------>获取复选框是否选中
.prop("checked",true)-->设置选中
.width("300px");----------------->无参数为获取,有参数为设置
.height("300px");----------------->无参数为获取,有参数为设置

.append/.appendTo 在备选元素的结尾插入内容;
.prepend/.prependTo 在备选元素的开头插入内容;
.before 在被选元素之后插入内容;//把元素添加到div的后面,相当于加兄弟元素
.after 在被选元素之前插入内容;//把元素添加到div的前面,相当于加兄弟元素

标签:selected--------->标签中被选中的元素
8..---------------------------------------------------------------------------------------
元素的left和top操作：
$("#dv").offset().left;
$("#dv").offset().top;
获取的是一个对象，该对象有left和top两个属性；left包含定位后的left和marigin-left；

$("#dv").offset({"left":值，"top":值};设置

9.----------------------------------------------------------------------------------------
元素向上卷曲出去的距离
scrollTop();---->方法，数字类型
10.---------------------------------------------------------------------------------------
jquery中事件委托
为父级元素绑定事件,父级元素代替自己元素绑定事件/父级元素调方法,为子级元素绑定事件
.delegate(选择器,类型,数据,方法);------
.delegate("p","click",function () {
alert("aa");
}
11.----------------------------------------------------------------------------------------
为元素绑定事件的三种方式
对象.事件名字(事件处理函数);--->$("#btn").click(function(){});
对象.bind("事件名字",事件处理函数);--->$("#btn").bind("click",function()};
父级对象.delegate("子级元素","事件对象","事件处理函数");$("#dv").delegate("p","click",function(){});-->只能为子元素绑定事件 自己不触发
12.-----------------------------------------------------------------------------------------
解绑事件
用什么方式绑定事件最好用什么方式解绑事件
$("#btn").click(function(){
$("#dv").bind("click",function () {
console.log("div被点了");
}
--解绑 所有的点击事件全部移除
$("#btn2").click(function(){
$("#dv").unbind("click");
});
括号中如果没有参数 此时该元素的所有事件解绑

$("#dv").off();-->父级元素和子级元素的所有事件全部移除
$("#dv").off("click");-->父级元素和子级元素的点击事件解绑
$("#dv").off("click","p");-->解绑p标签的点击事件
$("#dv").off("click mouseenter","p");-->p的两个事件都没了
$("#dv").off("","p");-->p的所有事件全部移除
$("#dv").off("click","**");-->移除div中所有的子元素的点击事件

同时解绑多个事件
.unbind("mouseenter mouseout ");--用空格

13.------------------------------------------------------------------------------------------
.focus();=.trigger("focus");触发的意思
14.------------------------------------------------------------------------------------------
e.button 获取鼠标按键的值;

//按下鼠标的同时也按下了键盘的a,e,cxx键
e.altKey,e.shiftKey,e.ctrlKey

e.target这个属性得到的是触发该事件的目标对象,此时是一个DOM对象
e.currentTarget这个属性得到的是触发该事件的当前对象
e.delegate	Target这个属性得到的是代理的这个对象

15.------------------------------------------------------------------------------------------

方法需要有返回值才能当对象调用函数;
链式编程的原理:每个方法都有返回值

16.------------------------------------------------------------------------------------------

断链用.end();
排他功能可以利用移除兄弟元素的属性实现,.siblings("li").removeAttr("index");

*************多库共存
$如果被赋值
1.可以用jQuery代替
2.var xy = $.noConflict();//把$的权利给了xy了.$就可以作为其他的用法出现在代码中

17.------------------------------------------------------------------------------------------

**************************************************************************************************************92期课堂笔记

包装集:把很多的DOM对象进行包装或者封装--->jQuery对象;
jQuery 中判断该元素是否存在 就是通过包装集的length来测试;
$("#btn.length!=0")

18.------------------------------------------------------------------------------------------
入口函数/相比于window.onload
$(function(){});可以跳过img的加载//当js在标签前面需要加入入口函数

js的顶级对象window;.
jQuery的顶级对象jQuery/$;-->相当于js原生对象中的window;

jQuery获取的是伪数组 不可以使用js的.方法

19.------------------------------------------------------------------------------------------
隐式迭代:
遍历DOM内部元素的过程叫隐式迭代;

************************************DOM树*****************************
文档中最大的元素为document;
DOM中最大的元素为window;
20.------------------------------------------------------------------------------------------
.children('参数'); 只能查找子级/参数为指定的子级;
.find('参数');查找后代/参数为指定的后代;
.siblings('参数');兄弟元素/参数为指定兄弟;
.nextAll('参数');后面所有的兄弟元素;/参数为指定兄弟  不包含自己
.preAll('参数');前面的所有兄弟元素;/参数为指定兄弟

判断元素是否有某个类名:
.hasClass('类名');类名不加点;/返回值为布尔值;
$('li:eq(2)').css();选择器;变量需要拼接;
$('li').eq(2).css();推荐 可直接使用变量 $('li').eq(index).css();

添加类名:
.addClass('类名');添加类名/不用点;
删除类名:
.removeClass('类名');添加类名/不用点;
切换类名:
.toggleClass('类名');切换类名/不用点;/有该参数类名则删除 没有该参数类名则删除;
21.------------------------------------------------------------------------------------------
鼠标进入离开:
onmouseover,onmouseout;支持事件冒泡
onmouseenter,onmouseleave;不支持事件冒泡
22.------------------------------------------------------------------------------------------
jq中的排他功能:
.sbilings().css();将this的元素样式改变,将this的兄弟元素样式取消;
23.------------------------------------------------------------------------------------------
事件切换:
.hover(fn{},fn{});参数为两个函数;第一个函数为鼠标进入后要执行的函数;第二个为鼠标离开后要执行的函数;

如果只写一个函数,那么鼠标进入和离开都会触发这个函数;//一般使用toggle配合;
24.------------------------------------------------------------------------------------------
动画排队:
只要有动画就会有排队;
.stop();用来停止动画效果;
$(this).stop().slideToggle();把上一个动画停了 在执行这一个 放在动画效果之前;
25.------------------------------------------------------------------------------------------

设置获取固有属性.prop();
.prop('属性','属性值');

自定义属性.attr();

26.------------------------------------------------------------------------------------------
数据缓存.data(); 这是把数据绑定到标签上 控制台查看不到 在内存中存放
data('name','value');向被选元素设置数据
date('name');获取改元素的数据;
27.------------------------------------------------------------------------------------------
***********************************************************************************************************************change事件
change事件 加给表单标签;
$('input').change(function (){console.log(xxx)});
发生改变时触发;

28.------------------------------------------------------------------------------------------
伪类选择器
:checked 获取被选中的元素

style中也可以设置,被选中的元素触发
input:checked {
}
input:focus{
获得焦点
}
E:empty{}/E:disabled{}空的/禁用的

29.------------------------------------------------------------------------------------------
获取设置内容
***************************双标签
获取标签中的内容
$('div').html();
可以获取也可以设置;   

.text();只能设置文本

在原有的基础上添加
var val = $('div').html();
$('div').html(val+'新添加的内容');
***************************单标签
.val();

30.------------------------------------------------------------------------------------------

****保留有效数字****
.toFixed(2);参数为有效数字的个数

31.------------------------------------------------------------------------------------------
获取上级元素的方法:
.parents();获取上级元素/所有的上级元素都会获取/body->html也会获取
.parents('.要找的元素');获取指定的上级元素;
32.------------------------------------------------------------------------------------------
字符串截取
.substr();需要两个参数也可以一个 第一个参数为要截取的位置的索引值;第二个参数为要截取的个数;
.substring();需要两个参数也可以一个 第一个参数为要截取的索引值;第二个参数为截取到的位置/截取不到最后一个元素;

33.------------------------------------------------------------------------------------------

jQuery中的 遍历元素/隐式迭代获取的是伪数组

1.第一种
$('div').each(function(i,element){
不能直接用element ,element是DOM对象
$(element).css('background',xxxx);
})

一个参数 为需要遍历的元素/这种方法一般用来遍历元素
2.第二种
$.each($('div'),function(i,element){同第一种});
两个参数 一个为需要遍历的元素 另一个为方法/方法有两个参数/这种方法一般用来遍历数据

var arr = ['red','blue','green'];
$.each($('div'),function(i,obj){
$(obj).css('background',arr[i])
})

34.------------------------------------------------------------------------------------------
$('<li>内容</li>')
内部添加:(父子)
.append();在后边添加
.preappend();在前面添加
外部添加:该元素的后边(兄弟)
.after();往后
.before();往前

删除元素:
.remove();删除元素本身
.empty();清空元素所有的子节点(留空标签)
.html('');设置为空

35.------------------------------------------------------------------------------------------
得到的是设置的宽和高/参数为设置的数值
.width();
.height();
得到的是padding加设置的宽高
.innerWidth();
.innerHeight();
得到的是加border,padding和设置的宽高
.outerWidth();
.outerHeight();
border+padding+margin+width
.outerWidth(true);
36.------------------------------------------------------------------------------------------
*************************************************************外边距
可以获取也可以设置;
.offset();被选元素与文档距离的top left 与父级元素无关
.offset().top;对象点属性不用加括号
.offset().width;
设置:
$('div').offset({
left : 200,
top : 200
})


只能获取不能设置;
.position();被选元素距离父元素的top left;
.position().top/.left;

.scrollTop();向上卷曲出去的距离;
.scrollLeft();向左卷曲出去的距离;

37.------------------------------------------------------------------------------------------

浏览器滚动条属于window,滚动时是window的滚动事件
$(window).scrollTop()

38..------------------------------------------------------------------------------------------
只有标签才能用动画;document文档对象不能执行;html和body可以执行;要使用body需要删除文档头

$('html,body').animate(){
scrollTop : top
}
39.------------------------------------------------------------------------------------------
事件绑定
$('input').on('事件类型',function(){});
优势:
可以同时绑定多个事件:
$('input').on('{
click : fn,
mouseover : fn
}')
如果多个事件类型的处理程序相同:
$('input').on('click mouseover mouseout',fn);
40.------------------------------------------------------------------------------------------
事件委托:性能优化 防止内存浪费;/后代元素委托给父元素
**************************************************************************************************jQuery:委派必须用on事件绑定
第一个参数事件
第二个参数委托的后代元素
第三个参数事件处理函数
$('ul').on('click','li',fn);
41.------------------------------------------------------------------------------------------
动态创建的元素继承不到之前的绑定事件
on事件创建的元素可以-->给动态元素创建的对象绑定事件用on
在动画中添加回调函数-->事件监听/结束后触发;
事件处理函数中的this指向事件源;

42.------------------------------------------------------------------------------------------
jQuery事件

.off();解绑事件/解除事件委托
.off('click','li');

.one();一次性事件/只可以进行一次

$('input').click(log(11));
$('input').click();自动触发/括号中什么都不写---|--->相当于调用方法;
$('input').trigger('要触发的事件');--------------|--->触发事件/会触发默认效果/行为
$('input').triggerHandler('要触发的事件');-----|---->触发事件/不会触发浏览器默认效果/行为

43.------------------------------------------------------------------------------------------
jQuery事件对象:当事件触发后产生的一个特殊对象;

e.preventDefault();或者retur false;//阻止默认行为
e.stopPropagation();//阻止冒泡





